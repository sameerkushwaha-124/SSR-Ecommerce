<%- include('./partials/owner-header') %>
<%- include('./partials/flash-messages') %>

<div class="min-h-screen pt-20 pb-10" style="background-color: var(--bg-primary);">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header with Back Button -->
        <div class="mb-8 flex items-center justify-between">
            <div class="flex items-center">
                <a href="/owners/users" 
                   class="mr-4 p-2 rounded-lg transition-all duration-200 hover:scale-110"
                   style="background-color: var(--bg-secondary); border: 1px solid var(--border-primary); color: var(--text-secondary);"
                   title="Back to Users">
                    <i class="ri-arrow-left-line"></i>
                </a>
                <div>
                    <h1 class="text-3xl font-bold" style="color: var(--text-primary);">User Profile</h1>
                    <p class="mt-2" style="color: var(--text-tertiary);">View user details and information</p>
                </div>
            </div>

        </div>

        <!-- User Profile Card -->
        <div class="rounded-xl shadow-sm p-8 mb-8 backdrop-blur-sm" 
             style="background-color: var(--bg-secondary); border: 1px solid var(--border-primary);">
            
            <!-- Profile Header Section -->
            <div class="flex items-center space-x-6 mb-8">
                <div class="w-24 h-24 rounded-full flex items-center justify-center"
                     style="background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));">
                    <span class="text-3xl font-bold text-white">
                        <%= user.fullname ? user.fullname.charAt(0).toUpperCase() : 'U' %>
                    </span>
                </div>
                <div>
                    <h2 class="text-2xl font-bold" style="color: var(--text-primary);">
                        <%= user.fullname || 'Unknown User' %>
                    </h2>
                    <p class="text-lg" style="color: var(--text-secondary);"><%= user.email %></p>
                    <p class="text-sm" style="color: var(--text-tertiary);">
                        Member since <%= new Date(user.createdAt || Date.now()).toLocaleDateString() %>
                    </p>
                </div>
            </div>

            <!-- User Information Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                <!-- Basic Information -->
                <div class="space-y-4">
                    <h3 class="text-lg font-semibold" style="color: var(--text-primary);">Basic Information</h3>
                    
                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <label class="block text-sm font-medium mb-1" style="color: var(--text-tertiary);">Full Name</label>
                        <p style="color: var(--text-primary);"><%= user.fullname || 'Not provided' %></p>
                    </div>

                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <label class="block text-sm font-medium mb-1" style="color: var(--text-tertiary);">Email Address</label>
                        <p style="color: var(--text-primary);"><%= user.email %></p>
                    </div>

                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <label class="block text-sm font-medium mb-1" style="color: var(--text-tertiary);">Contact Number</label>
                        <p style="color: var(--text-primary);"><%= user.contact || 'Not provided' %></p>
                    </div>

                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <label class="block text-sm font-medium mb-1" style="color: var(--text-tertiary);">Gender</label>
                        <p style="color: var(--text-primary);"><%= user.gender || 'Not specified' %></p>
                    </div>
                </div>

                <!-- Account Information -->
                <div class="space-y-4">
                    <h3 class="text-lg font-semibold" style="color: var(--text-primary);">Account Information</h3>
                    
                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <label class="block text-sm font-medium mb-1" style="color: var(--text-tertiary);">User ID</label>
                        <p class="font-mono text-sm" style="color: var(--text-primary);"><%= user._id %></p>
                    </div>

                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <label class="block text-sm font-medium mb-1" style="color: var(--text-tertiary);">Account Status</label>
                        <% if (user.isActive !== false) { %>
                            <span class="px-3 py-1 rounded-full text-xs font-medium"
                                  style="background-color: #dcfce7; color: #166534;">
                                Active
                            </span>
                        <% } else { %>
                            <div>
                                <span class="px-3 py-1 rounded-full text-xs font-medium"
                                      style="background-color: #fef2f2; color: #dc2626;">
                                    Inactive
                                </span>
                                <% if (user.inactiveSince) { %>
                                    <div class="text-sm mt-2" style="color: var(--text-tertiary);">
                                        Inactive since: <%= new Date(user.inactiveSince).toLocaleDateString() %> at <%= new Date(user.inactiveSince).toLocaleTimeString() %>
                                        <%
                                            const inactiveDate = new Date(user.inactiveSince);
                                            const now = new Date();
                                            const diffTime = Math.abs(now - inactiveDate);
                                            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                                            const diffHours = Math.ceil(diffTime / (1000 * 60 * 60));
                                        %>
                                        <br>
                                        <span class="text-xs" style="color: var(--text-tertiary);">
                                            <% if (diffDays < 1) { %>
                                                (<%= diffHours === 1 ? '1 hour' : diffHours + ' hours' %> ago)
                                            <% } else { %>
                                                (<%= diffDays === 1 ? '1 day' : diffDays + ' days' %> ago)
                                            <% } %>
                                        </span>
                                    </div>
                                <% } %>
                            </div>
                        <% } %>
                    </div>

                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <label class="block text-sm font-medium mb-1" style="color: var(--text-tertiary);">Registration Date</label>
                        <p style="color: var(--text-primary);">
                            <%= new Date(user.createdAt || Date.now()).toLocaleDateString() %> at 
                            <%= new Date(user.createdAt || Date.now()).toLocaleTimeString() %>
                        </p>
                    </div>

                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <label class="block text-sm font-medium mb-1" style="color: var(--text-tertiary);">Last Login</label>
                        <p style="color: var(--text-primary);">
                            <%= user.lastLogin ? new Date(user.lastLogin).toLocaleDateString() + ' at ' + new Date(user.lastLogin).toLocaleTimeString() : 'Never' %>
                        </p>
                    </div>
                </div>
            </div>

            <!-- Address Information -->
            <% if (user.address && (user.address.street || user.address.city || user.address.state || user.address.zipCode)) { %>
                <div class="mb-8">
                    <h3 class="text-lg font-semibold mb-4" style="color: var(--text-primary);">Address Information</h3>
                    <div class="p-4 rounded-lg" style="background-color: var(--bg-tertiary);">
                        <p style="color: var(--text-primary);">
                            <%= user.address.street || '' %><%= user.address.street ? ', ' : '' %>
                            <%= user.address.city || '' %><%= user.address.city ? ', ' : '' %>
                            <%= user.address.state || '' %> <%= user.address.zipCode || '' %>
                            <%= user.address.country || '' %>
                        </p>
                    </div>
                </div>
            <% } %>

            <!-- Cart Information -->
            <div class="mb-8">
                <h3 class="text-lg font-semibold mb-4" style="color: var(--text-primary);">Shopping Information</h3>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="p-4 rounded-lg text-center" style="background-color: var(--bg-tertiary);">
                        <div class="text-2xl font-bold" style="color: var(--accent-primary);">
                            <%= user.cart ? user.cart.length : 0 %>
                        </div>
                        <div class="text-sm" style="color: var(--text-tertiary);">Items in Cart</div>
                    </div>
                    <div class="p-4 rounded-lg text-center" style="background-color: var(--bg-tertiary);">
                        <div class="text-2xl font-bold" style="color: var(--accent-primary);">
                            <%= user.orders ? user.orders.length : 0 %>
                        </div>
                        <div class="text-sm" style="color: var(--text-tertiary);">Total Orders</div>
                    </div>
                    <div class="p-4 rounded-lg text-center" style="background-color: var(--bg-tertiary);">
                        <div class="text-2xl font-bold" style="color: var(--accent-primary);">
                            <%= user.preferences && user.preferences.newsletter ? 'Yes' : 'No' %>
                        </div>
                        <div class="text-sm" style="color: var(--text-tertiary);">Newsletter Subscription</div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex justify-between items-center pt-6 border-t" style="border-color: var(--border-primary);">
                <a href="/owners/users" 
                   class="px-6 py-3 rounded-xl font-medium transition-all duration-300 transform hover:scale-105"
                   style="background-color: var(--bg-tertiary); color: var(--text-primary); border: 1px solid var(--border-primary);">
                    <i class="ri-arrow-left-line mr-2"></i>Back to Users
                </a>
                <button onclick="deleteUser('<%= user._id %>', '<%= user.fullname %>')"
                        class="px-6 py-3 rounded-xl font-medium transition-all duration-300 transform hover:scale-105"
                        style="background: linear-gradient(135deg, #ef4444, #dc2626); color: white; border: 1px solid #f87171;">
                    <i class="ri-delete-bin-line mr-2"></i>Delete User
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="rounded-xl p-6 max-w-md w-full mx-4 backdrop-blur-sm"
         style="background-color: var(--bg-secondary); border: 1px solid var(--border-primary);">
        <div class="flex items-center mb-4">
            <div class="w-12 h-12 rounded-full flex items-center justify-center mr-4"
                 style="background: linear-gradient(135deg, #ef4444, #dc2626);">
                <i class="ri-error-warning-line text-white text-xl"></i>
            </div>
            <div>
                <h3 class="text-lg font-semibold" style="color: var(--text-primary);">Delete User</h3>
                <p class="text-sm" style="color: var(--text-tertiary);">This action cannot be undone</p>
            </div>
        </div>
        <p class="mb-4" style="color: var(--text-secondary);">
            Are you sure you want to delete user <span id="userName" class="font-semibold"></span>?
            This will permanently remove their account and all associated data.
        </p>

        <!-- Password Verification -->
        <div class="mb-6">
            <label class="block text-sm font-medium mb-2" style="color: var(--text-primary);">
                Enter your admin password to confirm:
            </label>
            <input type="password"
                   id="adminPassword"
                   placeholder="Admin password"
                   class="w-full px-4 py-3 rounded-lg transition-all duration-200 focus:outline-none focus:ring-2"
                   style="background-color: var(--bg-tertiary); border: 1px solid var(--border-primary); color: var(--text-primary);"
                   onfocus="this.style.borderColor='var(--accent-primary)'; this.style.boxShadow='0 0 0 2px var(--accent-primary)33';"
                   onblur="this.style.borderColor='var(--border-primary)'; this.style.boxShadow='none';">
            <div id="passwordError" class="text-sm mt-2 hidden" style="color: #ef4444;">
                Password is required to delete users
            </div>
        </div>

        <div class="flex justify-end space-x-3">
            <button onclick="closeDeleteModal()"
                    class="px-4 py-2 rounded-lg font-medium transition-all duration-200"
                    style="background-color: var(--bg-tertiary); color: var(--text-primary); border: 1px solid var(--border-primary);">
                Cancel
            </button>
            <button id="confirmDelete"
                    class="px-4 py-2 rounded-lg font-medium transition-all duration-200"
                    style="background: linear-gradient(135deg, #ef4444, #dc2626); color: white;">
                Delete User
            </button>
        </div>
    </div>
</div>

<script>
    let userToDelete = null;

    function deleteUser(userId, userName) {
        userToDelete = userId;
        document.getElementById('userName').textContent = userName;
        document.getElementById('deleteModal').classList.remove('hidden');
        document.getElementById('deleteModal').classList.add('flex');
    }

    function closeDeleteModal() {
        document.getElementById('deleteModal').classList.add('hidden');
        document.getElementById('deleteModal').classList.remove('flex');
        document.getElementById('adminPassword').value = '';
        document.getElementById('passwordError').classList.add('hidden');
        userToDelete = null;
    }

    document.getElementById('confirmDelete').addEventListener('click', async function() {
        if (!userToDelete) return;

        const password = document.getElementById('adminPassword').value;
        const passwordError = document.getElementById('passwordError');

        // Validate password input
        if (!password) {
            passwordError.textContent = 'Password is required to delete users';
            passwordError.classList.remove('hidden');
            return;
        }

        // Hide any previous error
        passwordError.classList.add('hidden');

        try {
            const response = await fetch(`/owners/users/delete/${userToDelete}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ password: password })
            });

            const data = await response.json();

            if (data.success) {
                showFlashMessage('success', 'User deleted successfully');
                setTimeout(() => {
                    window.location.href = '/owners/users';
                }, 1000);
            } else {
                passwordError.textContent = data.message || 'Failed to delete user';
                passwordError.classList.remove('hidden');
            }
        } catch (error) {
            console.error('Delete user error:', error);
            passwordError.textContent = 'Failed to delete user';
            passwordError.classList.remove('hidden');
        }

        if (document.getElementById('passwordError').classList.contains('hidden')) {
            closeDeleteModal();
        }
    });

    function showFlashMessage(type, message) {
        const flashMessage = document.createElement('div');
        flashMessage.className = `flash-message fixed top-20 left-1/2 transform -translate-x-1/2 p-4 pr-12 rounded-xl z-50 shadow-2xl min-w-80 max-w-md backdrop-blur-lg`;

        let bgStyle, iconClass;
        if (type === 'success') {
            bgStyle = 'background: linear-gradient(135deg, #10b981, #059669); border: 1px solid #34d399; box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);';
            iconClass = 'ri-check-circle-line';
        } else {
            bgStyle = 'background: linear-gradient(135deg, #ef4444, #dc2626); border: 1px solid #f87171; box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);';
            iconClass = 'ri-error-warning-line';
        }

        flashMessage.style.cssText = bgStyle;
        flashMessage.innerHTML = `
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <i class="${iconClass} text-white text-xl"></i>
                </div>
                <div class="ml-3">
                    <span class="block text-white font-medium">${message}</span>
                </div>
            </div>
            <button class="absolute top-2 right-3 text-white hover:text-gray-200 text-xl font-bold transition-colors duration-200" onclick="this.parentElement.remove()">&times;</button>
        `;

        document.body.appendChild(flashMessage);

        setTimeout(() => {
            if (flashMessage.parentNode) {
                flashMessage.style.transition = 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
                flashMessage.style.transform = 'translateX(-50%) translateY(-20px)';
                flashMessage.style.opacity = '0';
                setTimeout(() => {
                    if (flashMessage.parentNode) {
                        flashMessage.parentNode.removeChild(flashMessage);
                    }
                }, 400);
            }
        }, 3000);
    }

    // Close modal when clicking outside
    document.getElementById('deleteModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeDeleteModal();
        }
    });
</script>

<%- include('./partials/footer') %>
